#!/usr/bin/env bash
#*******************************************************************************
#Depends on: jq, protonvpn-cli, dmenu (Optionally libnotify for status and list)
#*******************************************************************************

getJSON(){
curl -s https://api.protonmail.ch/vpn/logicals | jq  ".LogicalServers[] | [.Name,.City,.Load] | @sh" | sed "s/\"//g ; s/null// ; s/'//g ; s/ \+/ /g ; s/$/% Load/"
}

case `printf "Connect\nDisconnect\nReconnect\nStatus\nConfigure" | dmenu -i -l 5 -p "Proton VPN:"` in
        Connect)
            case `printf "Choose-Server\nQuick-Connect\nFastest-P2P\nFastest-Tor\nRandom-Server" | dmenu -i -l 5 -p "Connect:"` in
                Choose-Server)
                    server=`getJSON | dmenu -i -l 5 -p "Choose Server:" | grep -o "[A-Z]\+-*[A-Z]\+#[0-9]\+-*T*O*R*"`
                    
                    if [[ -z "$server" ]]
                    then 
                        echo "oh noes" > /dev/null
                    else                 
                        protonvpn-cli c $server
                    
                    fi
                ;;
                Quick-Connect)
                    protonvpn-cli c -f
                    ;;
                Fastest-P2P)
                    protonvpn-cli c --p2p
                    ;;
                Fastest-Tor)
                    protonvpn-cli c --tor
                    ;;
                Random-Server)
                    protonvpn-cli c -r
                    ;;
            esac
            ;;
        Disconnect)
            protonvpn-cli d
            ;;
        Reconnect)
            protonvpn-cli r
            ;;
        Status)
            notify-send --icon=applications-internet "Proton VPN Connection Status" "`protonvpn-cli s | sed "s/^Proton.*$//g; s/-*-//g; /^$/ d"`"
            ;;
        Configure)
            case `printf "List\nProtocol\nKillSwitch\nNetShield\nDNS\nAlternative-Routing\nVPN-Accelerator\nModerate-NAT\nNon-Standard-Ports" | dmenu -i -l 9 -p "Configure:"` in
                List)
                     notify-send --icon=preferences-system "Proton VPN User Settings" "`protonvpn-cli config -l | sed "s/^Proton.*$//g; s/-*-//g; /^$/ d"`"
                    ;;
                Protocol)
                    choice=`printf "udp\ntcp" | dmenu -i -l 2 -p "Protocol:"`
                    if [[ -z "$choice" ]]
                    then 
                        echo "oh noes" > /dev/null
                    else                 
                        protonvpn-cli config -p $choice
                    fi
                    ;;
                KillSwitch)
                    choice=`printf "off\non\npermanent" | dmenu -i -l 3 -p "KillSwitch:"`
                    if [[ -z "$choice" ]]
                    then 
                        echo "oh noes" > /dev/null
                    else                 
                        protonvpn-cli ks --$choice
                    fi
                    ;;
                NetShield)
                    choice=`printf "off\nmalware\nads-malware" | dmenu -i -l 3 -p "NetShield:"`
                    if [[ -z "$choice" ]]
                    then 
                        echo "oh noes" > /dev/null
                    else                 
                        protonvpn-cli ns --$choice
                    fi
                    ;;                
                DNS)
                    case `printf "automatic\ncustom" | dmenu -i -l 2 -p "DNS:"` in
                        automatic) 
                        protonvpn-cli config --dns automatic
                        ;;

                        custom)
                            dns=`printf "" | dmenu -i -p "Enter DNS IP:"`
                            if [[ -z "$dns" ]]
                            then 
                                echo "oh noes" > /dev/null
                            else
                            protonvpn-cli config --dns custom --ip $dns
                            fi
                        ;;

                    esac
                    ;;
                Alternative-Routing)
                    choice=`printf "enable\ndisable" | dmenu -i -l 2 -p "Alternative-Routing:"`
                    if [[ -z "$choice" ]]
                    then 
                        echo "oh noes" > /dev/null
                    else                 
                        protonvpn-cli config --alt-routing $choice
                    fi
                    ;;
                VPN-Accelerator)
                    choice=`printf "enable\ndisable" | dmenu -i -l 2 -p "VPN-Accelerator:"`
                    if [[ -z "$choice" ]]
                    then 
                        echo "oh noes" > /dev/null
                    else                 
                        protonvpn-cli config --vpn-accelerator $choice
                    fi
                    ;;
                Moderate-NAT)
                    choice=`printf "enable\ndisable" | dmenu -i -l 2 -p "Moderate-Nat:"`
                    if [[ -z "$choice" ]]
                    then 
                        echo "oh noes" > /dev/null
                    else                 
                        protonvpn-cli config --moderate-nat $choice
                    fi
                    ;;
                Non-Standard-Ports)
                    choice=`printf "enable\ndisable" | dmenu -i -l 2 -p "Non-Standard-Ports:"`
                    if [[ -z "$choice" ]]
                    then 
                        echo "oh noes" > /dev/null
                    else                 
                        protonvpn-cli config --non-standard-ports $choice
                    fi
                    ;;
            esac
            ;;
esac
